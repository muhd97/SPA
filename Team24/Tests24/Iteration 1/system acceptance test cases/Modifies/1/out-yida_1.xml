<?xml-stylesheet type="text/xsl" href="analysis.xsl"?>
<test_results>
<info>
<name>1</name><parsing_time_taken>18.000000</parsing_time_taken>
</info>
<queries>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all procedures that modify a variable">1</id><querystr><![CDATA[procedure p; variable v; Select p such that Modifies(p, v)]]></querystr>
<stuans>yida1,yida2,yida3</stuans>
<correct>yida1,yida2,yida3</correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all procedures that modify a specific variable">2</id><querystr><![CDATA[procedure p; Select p such that Modifies(p, "p")]]></querystr>
<stuans>yida2,yida3</stuans>
<correct>yida2,yida3</correct>
<time_taken>14.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="Select all procedures that modify any variable (underscore)">3</id><querystr><![CDATA[procedure p; Select p such that Modifies(p, _)]]></querystr>
<stuans>yida1,yida2,yida3</stuans>
<correct>yida1,yida2,yida3</correct>
<time_taken>14.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all variables modified by "yida1" (procedure ident)">4</id><querystr><![CDATA[variable v; Select v such that Modifies("yida1", v)]]></querystr>
<stuans>x,a,y,z</stuans>
<correct>x,y,z,a</correct>
<time_taken>12.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all statements that modify a variable (syn, syn)">5</id><querystr><![CDATA[stmt s; variable v; Select s such that Modifies(s, v)]]></querystr>
<stuans>2,4,6,7,1,12,3,8,10,11</stuans>
<correct>1,2,3,4,6,7,8,10,11,12</correct>
<time_taken>12.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all statements that modify variable "j" (syn, ident)">6</id><querystr><![CDATA[stmt s; Select s such that Modifies(s, "j")]]></querystr>
<stuans>7,12</stuans>
<correct>7,12</correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="Select all statements that modify a variable (syn, underscore)">7</id><querystr><![CDATA[stmt s; Select s such that Modifies(s, _)]]></querystr>
<stuans>2,4,6,7,1,12,3,8,10,11</stuans>
<correct>1,2,3,4,6,7,8,10,11,12</correct>
<time_taken>13.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all variables modified by statement number 3 (num, syn)">8</id><querystr><![CDATA[variable v; Select v such that Modifies(3, v)]]></querystr>
<stuans>z</stuans>
<correct>z</correct>
<time_taken>15.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all variables modified by statement number 11 (for proc call)">9</id><querystr><![CDATA[variable v; Select v such that Modifies(11, v)]]></querystr>
<stuans>x,a,y,z</stuans>
<correct>x,y,z,a</correct>
<time_taken>19.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all variables that are modified by a statement">10</id><querystr><![CDATA[variable v; stmt s; Select v such that Modifies(s, v)]]></querystr>
<stuans>y,a,i,j,x,w,p,z</stuans>
<correct>x,y,z,a,i,j,p,w</correct>
<time_taken>14.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (syn, syn) - Get all variables">11</id><querystr><![CDATA[variable v; stmt s1; variable v1; Select v such that Modifies(s1, v1)]]></querystr>
<stuans>p,x,i,a,y,j,b,z,q,w</stuans>
<correct>x,y,z,a,b,i,j,p,q,w</correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (syn, "ident") - Get all variables">12</id><querystr><![CDATA[variable v; stmt s1; variable v1; Select v such that Modifies(s1, "j")]]></querystr>
<stuans>p,x,i,a,y,j,b,z,q,w</stuans>
<correct>x,y,z,a,b,i,j,p,q,w</correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="NO TARGET SYNONYM (syn, _) - Get all variables">13</id><querystr><![CDATA[variable v; stmt s1; variable v1; Select v such that Modifies(s1, _)]]></querystr>
<stuans>p,x,i,a,y,j,b,z,q,w</stuans>
<correct>x,y,z,a,b,i,j,p,q,w</correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (syn, "ident") - Empty result becuase false">14</id><querystr><![CDATA[variable v; stmt s1; Select v such that Modifies(s1, "b")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>5.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (num, syn) - Get all variables">15</id><querystr><![CDATA[variable v; variable v1; Select v such that Modifies(6, v1)]]></querystr>
<stuans>p,x,i,a,y,j,b,z,q,w</stuans>
<correct>x,y,z,a,b,i,j,p,q,w</correct>
<time_taken>7.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (syn, syn) - Get all statements">16</id><querystr><![CDATA[stmt s; stmt s1; variable v1; Select s such that Modifies(s1, v1)]]></querystr>
<stuans>1,2,3,4,5,6,7,8,9,10,11,12</stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="NO TARGET SYNONYM (num, _) - Get all variables">17</id><querystr><![CDATA[variable v; variable v1; Select v such that Modifies(7, _)]]></querystr>
<stuans>p,x,i,a,y,j,b,z,q,w</stuans>
<correct>x,y,z,a,b,i,j,p,q,w</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (num, "ident") - Get all variables">18</id><querystr><![CDATA[variable v; variable v1; Select v such that Modifies(8, "p")]]></querystr>
<stuans>p,x,i,a,y,j,b,z,q,w</stuans>
<correct>x,y,z,a,b,i,j,p,q,w</correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (num, "ident") - Get all variables but through proc call">19</id><querystr><![CDATA[variable v; variable v1; Select v such that Modifies(12, "p")]]></querystr>
<stuans>p,x,i,a,y,j,b,z,q,w</stuans>
<correct>x,y,z,a,b,i,j,p,q,w</correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (from ModifiesP) ("ident", "ident") - Get all statements">20</id><querystr><![CDATA[stmt s; variable v; Select s such that Modifies("yida2", "p")]]></querystr>
<stuans>1,2,3,4,5,6,7,8,9,10,11,12</stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12</correct>
<time_taken>7.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (from ModifiesP) ("ident", syn) - Get all statements">21</id><querystr><![CDATA[stmt s; variable v; Select s such that Modifies("yida1", v)]]></querystr>
<stuans>1,2,3,4,5,6,7,8,9,10,11,12</stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12</correct>
<time_taken>7.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="NO TARGET SYNONYM (from ModifiesP and through proc calls) ("ident", _) - Get all statements">22</id><querystr><![CDATA[stmt s; variable v; Select s such that Modifies("yida3", _)]]></querystr>
<stuans>1,2,3,4,5,6,7,8,9,10,11,12</stuans>
<correct>1,2,3,4,5,6,7,8,9,10,11,12</correct>
<time_taken>11.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (proc_syn, syn) - Get all procedures">23</id><querystr><![CDATA[procedure p; procedure p1; variable v1; Select p such that Modifies(p1, v1)]]></querystr>
<stuans>yida1,yida2,yida3,yida4</stuans>
<correct>yida1,yida2,yida3,yida4</correct>
<time_taken>6.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM (proc_syn, "ident") - Get all variables">24</id><querystr><![CDATA[procedure p; stmt s1; variable v1; Select v1 such that Modifies(p, "j")]]></querystr>
<stuans>p,x,i,a,y,j,b,z,q,w</stuans>
<correct>x,y,z,a,b,i,j,p,q,w</correct>
<time_taken>6.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="NO TARGET SYNONYM (proc_syn, _) - Get all variables">25</id><querystr><![CDATA[variable v; stmt s1; procedure p; Select v such that Modifies(p, _)]]></querystr>
<stuans>p,x,i,a,y,j,b,z,q,w</stuans>
<correct>x,y,z,a,b,i,j,p,q,w</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="NO TARGET SYNONYM (syn, _) - Get all procedures">26</id><querystr><![CDATA[procedure p; stmt s1; variable v1; Select p such that Modifies(s1, _)]]></querystr>
<stuans>yida1,yida2,yida3,yida4</stuans>
<correct>yida1,yida2,yida3,yida4</correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="NO TARGET SYNONYM ("ident", syn) - Empty result becuase false">27</id><querystr><![CDATA[variable v; stmt s1; Select v such that Modifies("yida4", "b")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>4.000000</time_taken>
<passed/>
</query>
</queries>
</test_results>
