<?xml-stylesheet type="text/xsl" href="analysis.xsl"?>
<test_results>
<info>
<name>1</name><parsing_time_taken>20.000000</parsing_time_taken>
</info>
<queries>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows">0</id><querystr><![CDATA[stmt s;  Select s such that Follows(1, s)]]></querystr>
<stuans>2</stuans>
<correct>2</correct>
<time_taken>11.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows">1</id><querystr><![CDATA[stmt s; Select s such that Follows (s, 8)]]></querystr>
<stuans>4</stuans>
<correct>4</correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="- valid query Follows">2</id><querystr><![CDATA[assign a; Select a such that Follows(a, _)]]></querystr>
<stuans>1,2,3,5,6,10</stuans>
<correct>1,2,3,5,6,10</correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows">3</id><querystr><![CDATA[stmt s, s1, s2; assign a, a1; while w; if ifs; variable v; procedure p, q; constant c; call cl; print pr; read r; Select a such that Follows(s, a)]]></querystr>
<stuans>2,3,6,7,12,11</stuans>
<correct>2,3,6,7,11,12</correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="valid query Follows (syn, _)">4</id><querystr><![CDATA[assign a; Select a such that Follows(a, _)]]></querystr>
<stuans>1,2,3,5,6,10</stuans>
<correct>1,2,3,5,6,10</correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows (stmt, stmt)">5</id><querystr><![CDATA[stmt s1, s2; Select s2 such that Follows(s1, s2)]]></querystr>
<stuans>2,3,4,8,6,7,12,11</stuans>
<correct>2,3,4,6,7,8,11,12</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="valid query Follows (read)">6</id><querystr><![CDATA[read re; Select r such that Follows(re, _)]]></querystr>
<exception>Bad PQL Query. The target synonym is NOT declared
</exception>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows">7</id><querystr><![CDATA[stmt s, s1, s2; assign a, a1; while w; if ifs; variable v; procedure p, q; constant c; call cl; print pr; read r; Select s such that Follows(7, s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="2" SuchThat="2" CondNum="5" RelNum="2" comment="valid query Follows">8</id><querystr><![CDATA[stmt s, s1, s2; assign a, a1; while w; if ifs; variable v; procedure p, q; constant c; call cl; print pr; read r; Select s such that Follows(s, 10) such that Follows(8, s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>11.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows">9</id><querystr><![CDATA[stmt s, s1, s2; assign a, a1; while w; if ifs; variable v; procedure p, q; constant c; call cl; print pr; read r; Select s such that Follows(s, 26)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows">10</id><querystr><![CDATA[stmt s, s1, s2; assign a, a1; while w; if ifs; variable v; procedure p, q; constant c; call cl; print pr; read r; Select s such that Follows(s, 17)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="valid query Follows (_, 2)">11</id><querystr><![CDATA[stmt s1; Select s such that Follows(_, 2)]]></querystr>
<exception>Bad PQL Query. The target synonym is NOT declared
</exception>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="invalid query Follows (var)">12</id><querystr><![CDATA[variable v; Select v such that Follows(v, _)]]></querystr>
<exception>Follows Error: The synonyms in a Follows relationship must be statements!</exception>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="invalid query Follows (constant)">13</id><querystr><![CDATA[variable v; constant c; Select v such that Follows(v, 6)]]></querystr>
<exception>Follows Error: The synonyms in a Follows relationship must be statements!</exception>
</query>
<query>
<id ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows*">14</id><querystr><![CDATA[stmt s; Select s such that Follows* (4, s)]]></querystr>
<stuans>12,8</stuans>
<correct>8,12</correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows*">15</id><querystr><![CDATA[stmt s; Select s such that Follows* (s, 8)]]></querystr>
<stuans>1,2,3,4</stuans>
<correct>1,2,3,4</correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows* (stmt)">16</id><querystr><![CDATA[stmt s; Select s such that Follows*(6, s)]]></querystr>
<stuans>7</stuans>
<correct>7</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows*">17</id><querystr><![CDATA[stmt s1, s2;  Select s1 such that Follows*(s1, s2)]]></querystr>
<stuans>1,2,3,4,5,6,8,10</stuans>
<correct>1,2,3,4,5,6,8,10</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Followsstar="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="valid query Follows* (_)">18</id><querystr><![CDATA[stmt s; Select s such that Follows*(_, 1)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows*">19</id><querystr><![CDATA[stmt s, s1, s2; assign a, a1; while w; if ifs; variable v; procedure p, q; constant c; call cl; print pr; read r; Select s such that Follows*(12, s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" comment="valid query Follows*">20</id><querystr><![CDATA[stmt s, s1, s2; assign a, a1; while w; if ifs; variable v; procedure p, q; constant c; call cl; print pr; read r; Select s such that Follows*(12, s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Followsstar="2" SuchThat="2" CondNum="5" RelNum="2" comment="valid query Follows*">21</id><querystr><![CDATA[stmt s, s1, s2; assign a, a1; while w; if ifs; variable v; procedure p, q; constant c; call cl; print pr; read r; Select s such that Follows*(s, 17) such that Follows*(9, s)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" Followsstar="1" SuchThat="2" CondNum="5" RelNum="2" comment="valid query Follows*">22</id><querystr><![CDATA[stmt s, s1, s2; assign a, a1; while w; if ifs; variable v; procedure p, q; constant c; call cl; print pr; read r; Select w such that Follows(s, w) such that Follows*(w, pr)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Followsstar="1" SuchThat="1" CondNum="3" RelNum="1" comment="invalid query with Follows* Clause()">23</id><querystr><![CDATA[variable v; stmt s; Select s such that Follows*(v, s)]]></querystr>
<exception>Follows*(s1, ?) but s1 is not declared a type of statement. Follows*() is only defined for statements
</exception>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all statements following stmt number 2 (int, syn)">24</id><querystr><![CDATA[stmt s; Select s such that Follows(2, s)]]></querystr>
<stuans>3</stuans>
<correct>3</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all statements s such that stmt number 7 follows it (syn, int)">25</id><querystr><![CDATA[stmt s; Select s such that Follows(s, 7)]]></querystr>
<stuans>6</stuans>
<correct>6</correct>
<time_taken>10.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all statements s such that stmt number 8 follows it (syn, int) [with jump]">26</id><querystr><![CDATA[stmt s; Select s such that Follows(s, 8)]]></querystr>
<stuans>4</stuans>
<correct>4</correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all assignment statements a such that there is a statement following it (syn, syn)">27</id><querystr><![CDATA[stmt s; assign a; Select a such that Follows(a, s)]]></querystr>
<stuans>1,2,3,5,6,10</stuans>
<correct>1,2,3,5,6,10</correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all assignment statements a such that there is a while statement following it (syn, syn)">27</id><querystr><![CDATA[stmt s; assign a; while w; Select a such that Follows(a, w)]]></querystr>
<stuans>3</stuans>
<correct>3</correct>
<time_taken>8.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" SuchThat="1" CondNum="3" RelNum="1" comment="Select all assignment statements a following if (syn, syn)">28</id><querystr><![CDATA[stmt s; assign a; if ifs; Select a such that Follows(ifs, a)]]></querystr>
<stuans>12</stuans>
<correct>12</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="Select all assignment statements that follow another statement (_, syn)">29</id><querystr><![CDATA[assign a; Select a such that Follows(_, a)]]></querystr>
<stuans>2,3,6,7,12,11</stuans>
<correct>2,3,6,7,11,12</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="1" UnnamedVar="1" SuchThat="1" CondNum="4" RelNum="1" comment="Select all while statements that follow another statement (_, syn)">30</id><querystr><![CDATA[while w; Select w such that Follows(_, w)]]></querystr>
<stuans>4</stuans>
<correct>4</correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
</queries>
</test_results>
