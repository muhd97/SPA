1 - Select s such that NextBip**(7, 15) (Call stmt - Procedure)
call c;
Select c.procName such that NextBip*(7, 15)
A, B, C, D, E, F, Call, Assign, AssignY, Print, PrintX, Read, ReadY
5000
2 - Select s such that NextBip*(83, 38) (Procedure - Line after call stmt)
variable v;
Select v.varName such that NextBip*(83, 38)
A,a, b, c, d, i, j, p, q, x, y, z
5000
3 - Select BOOLEAN such that NextBip*(#, #) = True (Next, executed immediately)

Select BOOLEAN such that NextBip*(1, 2)
TRUE
5000
4 - Select n such that NextBip*(#, #) = True (ifStmt - withinIf)
constant cs;
Select cs such that NextBip*(18, 19)
0, 1, 2, 3, 4, 5, 6, 8, 10, 20
5000
5 - Select s.stmt# such that NextBip*(#, #) = True (ifStmt - withinElse)
variable v;
Select v.varName such that NextBip*(18, 24)
a, b, c, d, i, j, p, q, x, y, z
5000
6 - Select c such that NextBip*(#, #) = True (whileStmt - withinWhile)
call c;
Select c such that NextBip*(27, 28)
7, 10, 13, 15, 20, 29, 31, 37, 48, 52, 55, 73, 74, 76, 99, 107, 109, 110
5000
7 - Select a such that NextBip*(#, #) = True (withinIf - outsideIfElse)
assign a;
Select a such that NextBip*(24, 29)
1, 3, 5, 11, 14, 17, 19, 21, 23, 24, 25, 28, 30, 33, 35, 38, 40, 42, 43, 47, 51, 53, 54, 56, 57, 59, 60, 62, 66, 67, 68, 78, 79, 91, 94, 95, 97, 98, 101, 103, 105, 106, 108
5000
8 - Select p1, p2 such that NextBip*(#, #) = True (withinWhile - whileCondition)
procedure p1, p2;
Select <p1, p2> such that NextBip*(23, 22)
A A,A Assign,A AssignY,A B,A C,A Call,A D,A E,A F,A Main,A Print,A PrintX,A Read,A ReadY,Assign A,Assign Assign,Assign AssignY,Assign B,Assign C,Assign Call,Assign D,Assign E,Assign F,Assign Main,Assign Print,Assign PrintX,Assign Read,Assign ReadY,AssignY A,AssignY Assign,AssignY AssignY,AssignY B,AssignY C,AssignY Call,AssignY D,AssignY E,AssignY F,AssignY Main,AssignY Print,AssignY PrintX,AssignY Read,AssignY ReadY,B A,B Assign,B AssignY,B B,B C,B Call,B D,B E,B F,B Main,B Print,B PrintX,B Read,B ReadY,C A,C Assign,C AssignY,C B,C C,C Call,C D,C E,C F,C Main,C Print,C PrintX,C Read,C ReadY,Call A,Call Assign,Call AssignY,Call B,Call C,Call Call,Call D,Call E,Call F,Call Main,Call Print,Call PrintX,Call Read,Call ReadY,D A,D Assign,D AssignY,D B,D C,D Call,D D,D E,D F,D Main,D Print,D PrintX,D Read,D ReadY,E A,E Assign,E AssignY,E B,E C,E Call,E D,E E,E F,E Main,E Print,E PrintX,E Read,E ReadY,F A,F Assign,F AssignY,F B,F C,F Call,F D,F E,F F,F Main,F Print,F PrintX,F Read,F ReadY,Main A,Main Assign,Main AssignY,Main B,Main C,Main Call,Main D,Main E,Main F,Main Main,Main Print,Main PrintX,Main Read,Main ReadY,Print A,Print Assign,Print AssignY,Print B,Print C,Print Call,Print D,Print E,Print F,Print Main,Print Print,Print PrintX,Print Read,Print ReadY,PrintX A,PrintX Assign,PrintX AssignY,PrintX B,PrintX C,PrintX Call,PrintX D,PrintX E,PrintX F,PrintX Main,PrintX Print,PrintX PrintX,PrintX Read,PrintX ReadY,Read A,Read Assign,Read AssignY,Read B,Read C,Read Call,Read D,Read E,Read F,Read Main,Read Print,Read PrintX,Read Read,Read ReadY,ReadY A,ReadY Assign,ReadY AssignY,ReadY B,ReadY C,ReadY Call,ReadY D,ReadY E,ReadY F,ReadY Main,ReadY Print,ReadY PrintX,ReadY Read,ReadY ReadY
5000
9 - Select BOOLEAN such that NextBip*(#, #) = True (False for Next - executed some line after - if)

Select BOOLEAN such that NextBip*(33, 48)
TRUE
5000
10 - Select v such that NextBip*(#, #) = True (False for Next - executed some line after - while)
variable v;
Select v such that NextBip*(49, 62)
a, b, c, d, i, j, p, q, x, y, z
5000
11 - Select if such that NextBip*(#, #) = False (Call and immediate line after)

Select BOOLEAN such that NextBip*(31, 32)
TRUE
5000
12 - Select w such that NextBip*(#, #) = False (Wrong order)
while w;
Select w such that NextBip*(19, 18)

5000
13 - Select n such that NextBip*(#, #) = False (Invalid stmt number - 0)
prog_line n;
Select n such that NextBip*(0, 1)

5000
14 - Select if, w such that NextBip*(#, #) = False (Out of range stmt number)
if ifs;
Select <ifs,  ifs> such that NextBip*(113, 114)

5000
15 - Select BOOLEAN such that NextBip*(if, #) (ifStmt - withinIf) 
if ifs;
Select BOOLEAN such that NextBip*(ifs, 33)
TRUE
5000
16 - Select if.stmt# such that NextBip*(if, #) (ifStmt - withinElse)
if ifs;
Select ifs.stmt# such that NextBip*(ifs, 43)
32
5000
17 - Select w such that NextBip*(w, #) (whileStmt - withinWhile)
while w;
Select w such that NextBip*(w, 91)
90, 104
5000
18 - Select n such that NextBip*(#, n) (last while stmt)
prog_line n;
Select n such that NextBip*(28, n)
27, 28, 29, 75, 76, 77
5000
19 - Select s.stmt# such that NextBip*(#, s) (last if/else stmt call stmt, include call procedure)
stmt s;
Select s.stmt# such that NextBip*(107, s)
90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113
5000
20 - Select BOOLEAN such that NextBip*(#, s) (last line - next line after call)
stmt s;
Select BOOLEAN such that NextBip*(82, s)
TRUE
5000
21 - Select a, a such that NextBip*(a, #) (last line - next line after call)
assign a;
Select <a, a> such that NextBip*(a, 56)
51 51, 53 53, 54 54, 56 56, 57 57, 59 59, 78 78, 79 79
5000
22 - Select c such that NextBip*(c, #) (withinWhile - outsideWhile)
call c;
Select c such that NextBip*(c, 113)
109, 110, 107, 99, 73, 76, 29, 20, 15, 7
5000
23 - Select BOOLEAN such that NextBip*(#, s) (p is invalid for prog_line)
stmt s;
Select BOOLEAN such that NextBip*(0, s)
FALSE
5000
24 - Select w, w such that NextBip*(#, s) (last procedure line)
while w;
Select <w, w> such that NextBip*(113, s)

5000
25 - Select n such that NextBip*(#, n) (if condition)
prog_line n;
Select n such that NextBip*(50, n)
49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 78, 79
5000
26 - Select s such that NextBip*(#, s) (while condition)
stmt s;
Select s such that NextBip*(64, s)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,80,81,82,83, 84, 85, 86, 88, 89, 90, 91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113
5000
27 - Select a such that NextBip*(if, a)  (ANS MIGHT BE INCORRECT)
assign a; if ifs;
Select a such that NextBip*(a, ifs)
1, 3, 5, 17, 33, 91, 14, 30, 51, 53, 54, 56, 57, 59, 66, 67, 68, 94, 95, 97, 98, 101, 103, 105, 106, 108
5000
28 - Select if, a.stmt# such that NextBip*(if, a) (ANS MIGHT BE INCORRECT)
assign a; if ifs;
Select <ifs, ifs.stmt#> such that NextBip*(ifs, a)
16 16, 18 18, 32 32, 34 34, 50 50, 65 65, 92 92, 93 93
5000
29 - Select w, s such that NextBip*(w, s) (ANS MIGHT BE INCORRECT)
while w; stmt s;
Select <w, s> such that NextBip*(w, s)
22 23,22 29,27 28,27 29,39 40,39 48,45 46,45 48,49 50,49 60,63 64,64 63,64 65,90 91,104 105,104 107,111 112,111 113, 104 100,104 101,104 102,104 103,104 104,104 106,104 108,104 90,104 91,104 92,104 93,104 94,104 95,104 96,104 97,104 98,104 99,111 111,22 22,27 27,39 39,39 41,45 45,45 47,49 49,49 51,49 52,49 53,49 54,49 55,49 56,49 57,49 58,49 59,49 61,49 62,63 63,63 65,63 66,63 67,63 68,63 69,63 70,63 71,63 72,63 73,63 74,64 64,64 66,64 67,64 68,64 69,64 70,64 71,64 72,64 73,64 74,90 100,90 101,90 102,90 103,90 104,90 105,90 106,90 107,90 108,90 90,90 92,90 93,90 94,90 95,90 96,90 97,90 98,90 99
5000
30 - Select a such that NextBip*(a, w)  (ANS MIGHT BE INCORRECT)
assign a; while w;
Select a such that NextBip*(a, w)
14,17,19,21,23,25,28,30,33,35,38,40,43,47,51,53,54,56,57,59,66,67,68,91,94,95,97,98,101,103,105,106,108
5000
31 - Select s1.stmt# such that NextBip*(s1, s2)  (ANS MIGHT BE INCORRECT)
stmt s1, s2;
Select s1.stmt# such that NextBip*(s1, s2)
1,10,100,101,102,103,104,105,106,107,108,109,11,110,111,112,12,14,15,16,17,18,19,2,20,21,22,23,24,25,26,27,28,3,30,31,32,33,34,35,36,37,38,39,4,40,41,42,43,44,45,46,47,49,5,50,51,52,53,54,55,56,57,58,59,6,60,61,63,64,65,66,67,68,69,7,70,71,72,73,74,75,76,8,80,81,84,85,88,89,9,90,91,92,93,94,95,96,97,98,99
5000
32 - Select a1, a2 such that NextBip*(a1, a2) (ANS MIGHT BE INCORRECT)
assign a1, a2;
Select <a1, a2> such that NextBip*(a1, a2)
53 57,56 57,66 67,67 68,94 95,97 108, 105 106, 1 11,1 3,1 5,101 101,101 103,101 105,101 106,101 108,101 91,101 94,101 95,101 97,101 98,103 101,103 103,103 105,103 106,103 108,103 91,103 94,103 95,103 97,103 98,105 101,105 103,105 105,105 108,105 91,105 94,105 95,105 97,105 98,106 101,106 103,106 105,106 106,106 108,106 91,106 94,106 95,106 97,106 98,108 101,108 103,108 105,108 106,108 108,108 91,108 94,108 95,108 97,108 98,14 17,14 19,14 21,14 23,14 24,14 25,14 28,17 19,17 21,17 23,17 24,19 21,19 23,21 23,23 23,25 28,28 28,3 11,3 5,30 33,30 35,30 38,30 40,30 42,30 43,30 47,33 35,33 38,33 40,33 42,35 38,35 40,38 40,40 40,43 47,47 47,5 11,51 51,51 53,51 54,51 56,51 57,51 59,51 60,51 62,53 51,53 53,53 54,53 56,53 59,53 60,53 62,54 51,54 53,54 54,54 56,54 57,54 59,54 60,54 62,56 51,56 53,56 54,56 56,56 59,56 60,56 62,57 51,57 53,57 54,57 56,57 57,57 59,57 60,57 62,59 51,59 53,59 54,59 56,59 57,59 59,59 60,59 62,60 62,66 66,66 68,67 66,67 67,68 66,68 67,68 68,91 101,91 103,91 105,91 106,91 108,91 91,91 94,91 95,91 97,91 98,94 101,94 103,94 105,94 106,94 108,94 91,94 94,94 97,94 98,95 101,95 103,95 105,95 106,95 108,95 91,95 94,95 95,95 97,95 98,97 101,97 103,97 105,97 106,97 91,97 94,97 95,97 97,97 98,98 101,98 103,98 105,98 106,98 108,98 91,98 94,98 95,98 97,98 98
5000
33 - Select r1, r2 such that NextBip*(r1, r2) (ANS MIGHT BE INCORRECT)
read r1, r2;
Select <r1, r2> such that NextBip*(r1, r2)
2 4, 2 8, 4 8, 46 46, 71 71, 84 86, 84 85, 85 86, 89 100, 89 96, 96 100, 96 96, 100 100, 100 96
5000
34 - Select p1, p2 such that NextBip*(p1, p2) (ANS MIGHT BE INCORRECT)
print p1; print p2;
Select <p1, p2> such that NextBip*(p1, p2)
41 41, 58 58, 58 61, 69 69, 69 72, 72 69, 72 72, 80 82, 80 81, 81 82, 88 102, 102 102, 112 112, 112 113,
5000
35 - Select c1, c2 such that NextBip*(c1, c2) (ANS MIGHT BE INCORRECT)
call c1, c2;
Select <c1.stmt#, c2.procName> such that NextBip*(c1, c2)
73 E, 109 Print, 10 Print,107 F,107 PrintX,15 Call,15 Print,20 Call,31 C,31 PrintX,37 C,52 Assign,52 AssignY,55 Assign,55 AssignY,7 Print,73 Read,74 E,74 Read,99 F,99 PrintX
5000
36 - Select v1, v2 such that NextBip*(v1, v2)
variable v1, v2;
Select <v1, v2> such that NextBip*(v1, v2)

5000
37 - Select BOOLEAN such that NextBip*(_, _) (TRUE; Meaningless query)

Select BOOLEAN such that NextBip*(_, _)
TRUE
5000
38 - Select if such that NextBip*(if, _)
if ifs;
Select ifs such that NextBip*(ifs, _)
6, 16, 18, 32, 34, 50, 65, 70, 92, 93
5000
39 - Select p, if such that NextBip*(_, if)
procedure p; if ifs;
Select <p, ifs> such that NextBip*(_, ifs)
A 16,A 18,A 32,A 34,A 50,A 6,A 65,A 70,A 92,A 93,Assign 16,Assign 18,Assign 32,Assign 34,Assign 50,Assign 6,Assign 65,Assign 70,Assign 92,Assign 93,AssignY 16,AssignY 18,AssignY 32,AssignY 34,AssignY 50,AssignY 6,AssignY 65,AssignY 70,AssignY 92,AssignY 93,B 16,B 18,B 32,B 34,B 50,B 6,B 65,B 70,B 92,B 93,C 16,C 18,C 32,C 34,C 50,C 6,C 65,C 70,C 92,C 93,Call 16,Call 18,Call 32,Call 34,Call 50,Call 6,Call 65,Call 70,Call 92,Call 93,D 16,D 18,D 32,D 34,D 50,D 6,D 65,D 70,D 92,D 93,E 16,E 18,E 32,E 34,E 50,E 6,E 65,E 70,E 92,E 93,F 16,F 18,F 32,F 34,F 50,F 6,F 65,F 70,F 92,F 93,Main 16,Main 18,Main 32,Main 34,Main 50,Main 6,Main 65,Main 70,Main 92,Main 93,Print 16,Print 18,Print 32,Print 34,Print 50,Print 6,Print 65,Print 70,Print 92,Print 93,PrintX 16,PrintX 18,PrintX 32,PrintX 34,PrintX 50,PrintX 6,PrintX 65,PrintX 70,PrintX 92,PrintX 93,Read 16,Read 18,Read 32,Read 34,Read 50,Read 6,Read 65,Read 70,Read 92,Read 93,ReadY 16,ReadY 18,ReadY 32,ReadY 34,ReadY 50,ReadY 6,ReadY 65,ReadY 70,ReadY 92,ReadY 93
5000
40 - Select w such that NextBip*(w, _)
while w;
Select w such that NextBip*(w, _)
22, 27, 39, 45, 49, 63, 64, 90, 104, 111
5000
41 - Select w such that NextBip*(_, w)
while w;
Select w such that NextBip*(_, w)
22, 27, 39, 45, 49, 63, 64, 90, 104, 111
5000
42 - Select a such that NextBip*(_, a)
assign a;
Select a such that NextBip*(_, a)
3,5,11,17,19,21,23,24,25,28,33,35,38,40,42,43,47,51,53,54,56,57,59,60,62,66,67,68,91,94,95,97,98,101,103,105,106,108
5000
43 - Select cs such that NextBip*(6, _) = True
constant cs;
Select cs such that NextBip*(6, _)
0, 1, 2, 3, 4, 5, 6, 8, 10, 20
5000
44 - Select pn such that NextBip*(#, _) = False (# is out of range)
print pn;
Select pn such that NextBip*(114, _)
sssssss
45 - Error
stmt s; prog_line n1, n2; 
Select x such that NextBip*(n1, n2)

5000
46 - Error
stmt s; prog_line n1, n2; 
Select n1 such that NextBip*(n1, x)

5000