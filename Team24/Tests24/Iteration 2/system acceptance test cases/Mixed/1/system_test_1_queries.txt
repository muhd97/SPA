1 - Select all procedure // answers not updated
procedure p;
Select p
Main, A, B, C, D, Call, Assign, AssignY, Print, PrintX, Read, ReadY
5000
2 - Select all assignments
assign a;
Select a

5000
3 - Select all variables
variable v;
Select v

5000
4 - Select all constants
constant cs;
Select cs
0, 1, 2, 3, 4, 5, 6, 8, 10, 20
5000
5 - Select all call statements
call c;
Select c

5000
6 - Select all read statements
read r;
Select r

5000
7 - Select all print statements
print pn;
Select pn

5000
8 - Select all while statements
while w;
Select w

5000
9 - Select all if statements
if ifs;
Select ifs

5000
10 - Select BOOLEAN such that Parent(#, #) = True (Direct nesting if)
stmt s;
Select BOOLEAN such that Parent(12, 13)
TRUE
5000
11 - Select procedure such that Parent(#, #) = True (Direct nesting while)
procedure p;
Select p such that Parent(35, 37)
Main, A, B, C, D, Call, Assign, AssignY, Print, PrintX, Read, ReadY
5000
12 - Select BOOLEAN such that Parent(#, #) = False (True if Parent* - Multiple Nesting if)
stmt s;
Select BOOLEAN such that Parent(28, 31)
FALSE
5000
13 - Select cs such that Parent(#, #) = False (True if Parent* - Multiple Nesting while)
constant cs;
Select cs such that Parent(59, 61)

5000
14 - Select BOOLEAN such that Parent(#, #) = False (Wrong order)
stmt s;
Select BOOLEAN such that Parent(13, 12)
FALSE
5000
15 - Select print statements such that Parent(#, #) = False (Within same levels)
print pn;
Select pn such that Parent(1, 6)

5000
16 - Select print statements such that Parent(#, #) = False (Within same levels; if-else)
print pn;
Select pn such that Parent(7, 8)

5000
17 - Select read statements such that Parent(#, #) = False (Invalid stmt number - 0)
read r;
Select r such that Parent(0, 1)

5000
18 - Select <if, while> such that Parent(#, #) = False (Out of range stmt number)
if ifs; while w;
Select <ifs, w> such that Parent(110, 111)

5000
19 - Select BOOLEAN such that Parent(s, #) where # is a top level stmt (FALSE)
stmt s; 
Select BOOLEAN such that Parent(s, 28)
FALSE
5000
20 - Select <if, w> such that Parent(if, #) where # is a stmt in if block - second level block (TRUE)
if ifs; while w;
Select <if, w> such that Parent(ifs, 16)
14 18, 14 23, 14 35, 14 41, 14 45, 14 59, 14 60
5000
21 - Select s such that Parent(s, #) where # is a stmt in while block - third level block (TRUE)
stmt s;
Select s such that Parent(s, 19)
18
5000
22 - Select s such that Parent(#, s) where # is not if/while (FALSE)
stmt s;
Select s such that Parent(27, s)

5000
23 - Select s.stmt# such that Parent(#, s) where # is a if stmt - first level (TRUE)
stmt s;
Select s such that Parent(12, s)

5000
24 - Select s such that Parent(#, s) where # is a while stmt - second level (TRUE)
stmt s;
Select s such that Parent(60, s)

5000
25 - Select BOOLEAN such that Parent(r, a) (FALSE)
stmt s;
Select s such that Parent(r, a)

5000
26 - Select a such that Parent(a, if) (FALSE)
stmt s;
Select s such that Parent(a, if)

5000
27 - Select if such that Parent(if, a) 
stmt s;
Select s sucht that Parent(if, a) 

5000
28 - Select <r, w> such that Parent(r, w) (FALSE)
stmt s; read r; while w;
Select s such that Parent(r, w)

5000
29 - Select a such that Parent(w, a)
while w; assign a; stmt s;
Select s such that Parent(w, a)

5000
30 - Select w such that Parent(w, if)
while w; if ifs; stmt s;
Select s such that Parent(w, if)

5000
31 - Select w such that Parent(w, if)
while w; if ifs; stmt s;
Select s such that Parent(w, ifs)

5000
32 - Select <w1, w2> such that Parent(w1, w2)
while w1, w2; stmt s;
Select s such that Parent(w1, w2)

5000
33 - Select <if1, if2> such that Parent(if1, if2)
if if1, if2; stmt s;
Select s such that Parent(if1, if2)

5000
34 - Select BOOLEAN such that Parent(_, _) (TRUE; Meaningless query)
stmt s;
Select BOOLEAN such that Parent(_, _)

5000
35 - Select w such that Parent(w, _)
while w;
Select w such that Parent(w, _)

5000
36 - Select if such that Parent(if, _)
if ifs;
Select ifs such that Parent(ifs, _)

5000
37 - Select w such that Parent(_, w)
while w;
Select w such that Parent(_, w)

5000
38 - Select if such that Parent(_, if)
if ifs;
Select ifs such that Parent(_, ifs)

5000
39 - Select a such that Parent(_, a)
assign a;
Select a such that Parent(_, a)

5000
40 - Select a such that Parent(a, _) = False
assign a;
Select a such that Parent(a, _)

5000
41 - Select pn such that Parent(#, _) = False
print pn;
Select pn such that Parent(pn, _)

5000
42 - Select cs such that Parent(#, _) = True
constant cs;
Select cs such that Parent(cs, _)

5000
43 - Error
stmt s; while w; if ifs;
Select x such that Parent(w, _)

5000
44 - Error
stmt s; while w; if ifs; 
Select w such that Parent(#, x)

5000
45 - Select BOOLEAN such that Parent*(#, #) = True (Direct nesting if)
stmt s;
Select BOOLEAN such that Parent*(6, 7)

5000
46 - Select procedure such that Parent*(#, #) = True (Direct nesting while)
procedure p;
Select p such that Parent*(22, 23)

5000
47 - Select variables such that Parent*(#, #) = True (False if Parent - Multiple Nesting - 4 levels)
variable v;
Select variables such that Parent*(16, 23)

5000
48 - Select c.stmt# such that Parent*(#, #) = True (False if Parent - Multiple Nesting - 3 levels)
call c;
Select c.stmt# such that Parent*(16, 19)

5000
49 - Select BOOLEAN such that Parent*(#, #) = False (Wrong order)
stmt s;
Select BOOLEAN such that Parent*(19, 16)
FALSE
5000
50 - Select print statements such that Parent*(#, #) = False (Within same levels)
print pn;
Select pn such that Parent*(1, 6)

5000
51 - Select print statements such that Parent*(#, #) = False (Within same levels; if-else)
print pn;
Select pn such that Parent*(7, 8)

5000
52 - Select read statements such that Parent*(#, #) = False (Invalid stmt number - 0)
read r;
Select r such that Parent*(0, 1)

5000
53 - Select <if, while> such that Parent*(#, #) = False (Out of range stmt number)
if ifs; while w;
Select <ifs, w> such that Parent*(110, 111)

5000
54 - Select BOOLEAN such that Parent*(s, #) where # is a top level stmt (FALSE)
stmt s;
Select BOOLEAN such that Parent*(s, 2)
FALSE
5000
55 - Select <p1, p2> such that Parent*(s, #) where # is a stmt in if block - second level block (TRUE)
procedure p1, p2; stmt s;
Select <p1, p2> such that Parent*(s, 93)

5000
56 - Select s such that Parent*(s, #) where # is a stmt in while block - third level block (TRUE)
stmt s;
Select s such that Parent*(s, 105)

5000
57 - Select s such that Parent*(#, s) where # is not if/while (FALSE)
stmt s;
Select s such that Parent*(#, s)

5000
58 - Select s such that Parent*(#, s) where # is a if stmt - first level (TRUE)
stmt s;
Select s such that Parent*(32, s)

5000
59 - Select s such that Parent*(#, s) where # is a while stmt - second level (TRUE)
stmt s;
Select s such that Parent*(64, s)

5000
60 - Select BOOLEAN such that Parent*(r, a) (FALSE)
read r; assign a;
Select BOOLEAN such that Parent*(r, a)
FALSE
5000
61 - Select a such that Parent*(a, if) (FALSE)
assign a; if ifs;
Select a such that Parent*(a, if)

5000
62 - Select if such that Parent*(if, a)
assign a; if ifs;
Select a such that Parent*(if, a)

5000
63 - Select <w, pn> such that Parent*(pn, w) (FALSE)
while w; print pn;
Select <w, pn> such that Parent*(pn, w)

5000
64 - Select a such that Parent*(w, a)
while w; assign a;
Select a such that Parent*(w, a)

5000
65 - Select w such that Parent*(w, if)
while w; if ifs;
Select w such that Parent*(w, ifs)

5000
66 - Select if such that Parent*(if, w)
while w; if ifs;
Select ifs such that Parent*(ifs, w)

5000
67 - Select <w1, w2> such that Parent*(w1, w2)
while w1, w2;
Select <w1, w2> such that Parent*(w1, w2)

5000
68 - Select <if1, if2> such that Parent*(if1, if2)
if if1, if2;
Select <if1, if2> such that Parent*(if1, if2)

5000
69 - Select BOOLEAN such that Parent*(_, _) (TRUE; Meaningless query)
stmt s;
Select BOOLEAN such that Parent*(_, _)

5000
70 - Select w such that Parent*(w, _)
while w;
Select w such that Parent*(w, _)

5000
71 - Select if such that Parent*(if, _)
if ifs;
Select ifs such that Parent*(ifs, _)

5000
72 - Select w such that Parent*(_, w)
while w;
Select w such that Parent*(_, w)

5000
73 - Select if such that Parent*(_, if)
if ifs;
Select ifs such that Parent*(_, ifs)
74 - Select a such that Parent*(_, a)
assign a;
Select a such that Parent*(_, a)

5000
75 - Select a such that Parent*(a, _) = False
assign a;
Select a such that Parent*(a, _)

5000
76 - Select pn such that Parent*(#, _) = False
print pn;
Select pn such that Parent*(pn, _)

5000
77 - Select cs such that Parent*(#, _) = True
constant cs;
Select cs such that Parent*(cs, _)

5000
78 - Error
stmt s; while w; if ifs; 
Select x such that Parent*(#, _)

5000
79 - Error
stmt s; while w; if ifs; 
Select w such that Parent*(#, x)

5000